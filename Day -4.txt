'''
42. Random Model
import random

random_number = random.randint(1,10)
print(random_number)

random_float = random.random() * 5
print(random_float)
0.1*5=0.5
0.2*5=1.0
0.3*5=1.5
........
5
love_score = random.randint(1,100)
print(f"Your love score is {love_score}")

print(random.random()) # Not agrument pass ony output float number

print(random.randrange(2)) # only output 0 or 1

print(random.randrange(2,6)) # output 2,3,4,5

# error print(random.randrange(6,2)) # output 2,3,4,5

print(random.randrange(6,2,-1)) # output reverse 5,4,3,2
# help(random) show rendom documenttation

print(random.uniform(2,4)) # floting value
T = (11,22,33)
print(random.choice(T))

print(random.choice('134'))

mylist = ["apple", "banana", "cherry"]
L = random.shuffle(mylist)
print(mylist)

# 43.[Interactive Coding Exercise] Heads or Tails
import random 
random_side = random.randint(0,1)
if random_side == 1:
  print("Heads")
else:
  print("Tails")

# 44. Understanding the Offset and Appending Items to Lists
states_of_america = [
    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado',
    'Connecticut', 'Washington DC', 'Delaware', 'Florida', 'Georgia', 'Hawaii',
    'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana',
    'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',
    'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada',
    'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina',
    'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',
    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas',
    'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin',
    'Wyoming'
]

list.append(x)
list.extend(iterable)
list.insert(i, x)
list.remove(x)
list.pop([i])
list.clear()
list.index(x[, start[, end]])
list.count(x)
list.sort(*, key=None, reverse=False)
list.reverse()
list.copy()

fruits = ['apple', 'banana', 'cherry']
gggg = fruits.copy()

print(gggg)

#print(states_of_america[0])
#print(states_of_america[-2])

# 45. [Interactive Coding Exercise] Banker Roulette - who will pay the bill?
import random

names_string = input()

names = names_string.split(", ")
print(names)

num_items = len(names)
print(num_items)
random_choice = random.randint(0, num_items - 1)
print(random_choice)

person_who_will_pay = names[random_choice]
print(person_who_will_pay + " is going to buy the meal today!")

# 46. IndexErrors and Working with Nested Lists

fruits = ["A", "y", "i", "o"]
vegetables = ["U", "i", "K"]

dirty_dozen = [fruits, vegetables]
print(dirty_dozen)
'''
